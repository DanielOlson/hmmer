Checklist for a HMMER release
SRE, Tue Mar 25 14:34:33 2008
--------------------------------------------------------
When editing this 00CHECKLIST, edit it in the trunk, not in a release
branch; it isn't included in releases anyway.

Subversion repository:  https://svn.janelia.org/eddylab/eddys/src/hmmer

HMMER follows an 'unstable trunk' policy.
Each major release goes onto a stable branch.
Every release (even minor ones) is tagged.

Release types: major releases, minor releases, and snapshots. A major
release gets its own branch. A minor release puts bug fixes into a
major branch. A snapshot is from the development trunk.

Version naming:                                        example
major    <lineage>.<major-release>                      3.0
minor    <lineage>.<major-release>.<minor-release>      3.0.1
alpha    <lineage>.<major-release>a<n>                  3.0a1 
beta     <lineage>.<major-release>b<n>                  3.0b1 
snapshot <lineage>.<major-release>.snap<yyyymmdd>       3.0.snap20080325



1. Announce intent to release to all developers. 
   Commit working copies on all machines.
   Check for stray uncommitted files:
	 ./configure
         make distclean
         svn update
	 svn status
   Clean up any stray files identified by 'svn status'.
   'svn add' and 'svn commit' as needed to commit new or modified files.


================================================================
= Creating a new major release branch, if necessary
================================================================

For major public releases (3.0, 3.1): we create a Subversion branch,
so we can continue support (with bugfixes) without disrupting
development of the next main release.


*  First test the development trunk.
   Compile should be entirely clean when compiled -Wall.
   'make check' should be clean.
   '(cd documentation; make)' should work

   When trunk is clean, 
   svn commit
   We're (usually) next going to move out of the trunk to the release branch.

*  Create stable release branch from the trunk.
   All subsequent bugfix releases will happen in this branch, while trunk keeps moving.

   svn copy https://svn.janelia.org/eddylab/eddys/src/hmmer/trunk\
            https://svn.janelia.org/eddylab/eddys/src/hmmer/branches/3.0\
            -m "created 3.0 release branch"          



================================================================
= Creating a distribution
================================================================

${HMMER_VERSION} tag used below should match @HMMER_VERSION@ in configure.ac, Makefile


* You can put it in the environment and everything will work as cut/paste:
   setenv HMMER_VERSION  3.0a1
   cd ~/releases

* Delete any old releases of the same number
   rm -rf hmmer-${HMMER_VERSION}
   rm -f  hmmer-${HMMER_VERSION}.tar
   rm -f  hmmer-${HMMER_VERSION}.tar.gz

* Export a snapshot, alpha, beta, or release candidate from the development trunk: 
   svn export https://svn.janelia.org/eddylab/eddys/src/hmmer/trunk hmmer-${HMMER_VERSION}
   cd hmmer-${HMMER_VERSION}


* or: Export a major or minor release from its permanent tag
   svn export https://svn.janelia.org/eddylab/eddys/src/hmmer/tags/${HMMER_VERSION} hmmer-${HMMER_VERSION}
   cd hmmer-${HMMER_VERSION}


* Edit configure.ac: make sure version, date, copyright info is set correctly
   emacs configure.ac
   ln -s easel/aclocal.m4 .
   autoconf; (cd easel; autoconf)
   ./configure
   source LICENSE.csh

* Set file permissions
   find . -type f -exec chmod +r {} \;
   chmod +x easel/devkit/autodoc
   chmod +x easel/devkit/sqc
* versioning, dating, licensing (these are originally set in configure.ac)
* must do Easel first
   easel/devkit/sedition EASEL_VERSION ${EASEL_VERSION} EASEL_DATE "${EASEL_DATE}" EASEL_COPYRIGHT "${EASEL_COPYRIGHT}" easel/00README
   easel/devkit/sedition EASEL_VERSION ${EASEL_VERSION} EASEL_DATE "${EASEL_DATE}" EASEL_COPYRIGHT "${EASEL_COPYRIGHT}" easel/COPYRIGHT
   easel/devkit/sedition EASEL_VERSION ${EASEL_VERSION} EASEL_DATE "${EASEL_DATE}" EASEL_COPYRIGHT "${EASEL_COPYRIGHT}" easel/INSTALL
   easel/devkit/sedition EASEL_VERSION ${EASEL_VERSION} EASEL_DATE "${EASEL_DATE}" EASEL_COPYRIGHT "${EASEL_COPYRIGHT}" easel/LICENSE.tag
   find easel -type f -exec easel/devkit/sedition-pp LICENSE easel/LICENSE.tag {} \;   

   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" 00README
   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" COPYRIGHT
   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" INSTALL
   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" LICENSE.tag
   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" documentation/alphaguide/copyright.tex
   easel/devkit/sedition HMMER_VERSION ${HMMER_VERSION} HMMER_DATE "${HMMER_DATE}" HMMER_COPYRIGHT "${HMMER_COPYRIGHT}" documentation/alphaguide/titlepage.tex
   find .     -type f -exec easel/devkit/sedition-pp LICENSE       LICENSE.tag {} \;

* compile documentation
  Alpha Guide:
   cd documentation/alphaguide
   make
   mv Alphaguide.pdf ../../Userguide.pdf
   cd ../..

  User Guide (not ready yet)
   cd documentation/userguide
   ln -s plan7-core.ai plan7-core.pdf
   ln -s plan7-search.ai  plan7-search.pdf
   make
   pdflatex main
   mv Userguide.pdf ../../
   cd ../..	 

* compile binaries

   ssh login-eddy
   cd releases/hmmer-${HMMER_VERSION}
   source LICENSE.csh
   ./configure CC=icc LDFLAGS=-static
   make
   make check
   make BINDIR=${HOME}/releases/hmmer-${HMMER_VERSION}/binaries install


* clean up files that don't belong in the distro

   make distclean
   rm -f  00CHECKLIST CHECKLIST 00README-FIRSTTIME-DEVELOPER
   rm -f  MAILING_LIST ALPHATEST TODO LICENSE.tag LICENSE.csh.in
   rm -rf Bugs Internal-Notes Release-Notes
   rm -rf old-src ssdk old-testsuite old-tutorial
   rm -rf src/impl_vmx	
   rm -rf src/testsuite
   rm -rf documentation

   cd easel
   rm -f  00CHECKLIST LICENSE.csh.in LICENSE.tag 
   rm -rf documentation
   cd ..

* package
   cd ..
   tar cvf hmmer-${HMMER_VERSION}.tar hmmer-${HMMER_VERSION}
   gzip hmmer-${HMMER_VERSION}.tar


* test
   cd hmmer-${HMMER_VERSION}
   ./configure
   make
   make check
   make dev
   cd easel
   make check
   cd ../..

* test the tutorial
   src/hmmbuild globins4.hmm tutorial/globins4.sto
   src/hmmsearch globins4.hmm /misc/data0/databases/uniprot-7.0/uniprot_sprot.fasta > globins4.out
   src/hmmbuild fn3.hmm tutorial/fn3.sto
   src/hmmsearch fn3.hmm tutorial/7LESS_DROME > fn3.out
   src/hmmsearch fn3.hmm /misc/data0/databases/uniprot-7.0/uniprot_sprot.fasta > fn3-2.out
   src/hmmbuild Pkinase.hmm tutorial/Pkinase.sto
   cat globins4.hmm fn3.hmm Pkinase.hmm > minifam
   src/hmmpress minifam
   src/hmmscan minifam tutorial/7LESS_DROME
   src/hmmalign globins4.hmm tutorial/globins45.fa
   src/phmmer tutorial/HBB_HUMAN  /misc/data0/databases/uniprot-7.0/uniprot_sprot.fasta > hbb.out
   src/phmmer tutorial/HBB_HUMAN  tutorial/globins45.fa
   
   setenv OMPI_MPICC icc
   setenv OMPI_MPICC_CFLAGS "-O3"
   setenv OMPI_MPICC_LDFLAGS "-static"
   ./configure --enable-mpi --prefix=/usr/local/hmmer3
   make
   cd src
   ln -s /misc/data0/databases/Pfam/Pfam-A.seed .
   qsub -N hmmbuild -j y -o errors.out -b y -cwd -V -pe openmpi 200 'mpirun -mca btl self,tcp --prefix /usr/local/openmpi -np 200 ./hmmbuild --mpi Pfam.hmm Pfam-A.seed > hmmbuild.out'

* copy to ftp site

  To make snapshots privately available:
   scp hmmer-${HMMER_VERSION}.tar.gz selab:/opt/www/ftp/pub/pickup/ 
   echo ftp://selab.janelia.org/pub/pickup/hmmer-${HMMER_VERSION}.tar.gz
   
   
   
   
Release history
---------------

Release           Date            SVN (HMMER/Easel)
----------------  -------------   -----------------
3.0.snap20080325  25 Mar 2008     r2370/r236
3.0.snap20080419  19 Apr 2008     r2398/r247
3.0.snap20081101   1 Nov 2008     r2620/r302
3.0a1             12 Jan 2009     r2699/r312


